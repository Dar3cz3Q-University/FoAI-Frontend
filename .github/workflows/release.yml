name: Release
run-name: Release by @${{ github.actor }}

on:
  workflow_run:
    workflows: ["Pipeline"]
    types:
      - completed

jobs:
  tag:
    name: Semantic Release
    runs-on: ubuntu-latest

    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'master'

    permissions:
      contents: write
      issues: write
      pull-requests: write

    outputs:
      released: ${{ steps.check_release.outputs.released }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "latest"

      - name: Init empty package.json
        run: npm init -y

      - name: Install semantic-release with plugins
        run: npm install --save-dev semantic-release @semantic-release/git @semantic-release/exec

      - name: Save old version
        run: |
          echo "OLD_VERSION=$(cat version || echo 'none')" >> $GITHUB_ENV

      - name: Run Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if version changed
        id: check_release
        run: |
          NEW_VERSION=$(cat version || echo 'none')
          if [ "$NEW_VERSION" != "$OLD_VERSION" ]; then
            echo "Version changed: $OLD_VERSION â†’ $NEW_VERSION"
            echo "released=true" >> $GITHUB_OUTPUT
          else
            echo "No new release"
            echo "released=false" >> $GITHUB_OUTPUT
          fi

  publish:
    name: Publish to Azure Container Registry
    runs-on: ubuntu-latest
    needs: tag

    if: needs.tag.outputs.released == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
